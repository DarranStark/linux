"常规配置 {
set history=700
set nu
set nocompatible "关闭vi兼容模式
set nohlsearch	 "关闭高亮搜索
set incsearch	 "实时搜索
set ignorecase	 "设置大小写敏感和聪明感知(小写全搜，大写完全匹配)
set autoindent	 "自动缩进
set autoread	 "自动载入
set wrap		 "自动换行
set confirm		 "在处理未保存或只读文件的时候，弹出确认
set autowrite	
set backspace=2
set ruler
set showcmd
set nobackup
set noswapfile
set backspace=indent,eol,start
set cursorline
set cursorcolumn

"tab setting
set tabstop=4
set shiftwidth=4
set softtabstop=4

"utf-8 setting
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1

"color
if ! has("gui_running")
	set t_Co=256
endif
set background=dark

"}


"使用Vundle管理插件 {
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#rc()

Plugin 'gmarik/Vundle.vim'
Plugin 'scrooloose/syntastic'
Plugin 'Townk/vim-autoclose'
Plugin 'mattn/emmet-vim'
	
"Plugin 'vim-scripts/peaksea'
	"colorscheme peaksea

"Plugin 'Solarized'
	"colorscheme solarized
	"let g:solarized_termtrans = 1
	"let g:solarized_termcolors = 256
	"let g:solarized_contrast = "high"
	"let g:solarized_visibility = "high"

Plugin 'tomasr/molokai'
	colorscheme molokai
	let g:rehash256 = 1
	"let g:molokai_original = 1

Plugin 'Lokaltog/vim-powerline'
	set laststatus=2
	set t_Co=256
	let g:Powline_symbols='fancy'

Plugin 'Lokaltog/vim-easymotion' 
	let g:EasyMotion_do_mapping = 0
	let g:easymotion_smartcase = 1
	"nmap s <Plug>(easymotion-s)
	nmap s <Plug>(easymotion-s2)
	map <Leader>j <Plug>(easymotion-j)
	map <Leader>k <Plug>(easymotion-k)

Plugin 'ervandew/supertab'
let g:SuperTabDefaultCompletionType = "<c-n>"

Plugin 'The-NERD-tree'
	map <F2> :NERDTreeToggle<CR>
	let NERDTreeShowBookmarks=1
	let NERDTreeShowHidden=1
	let NERDTreeShowLineNumbers=1

Plugin 'The-NERD-Commenter'
	"支持单行和多行的选择，//格式
	let NERDShutUp=1
	map <c-h> ,c<space>"

Plugin 'godlygeek/tabular'
	if exists(":Tabularize")
      nmap <Leader>a= :Tabularize /=<CR>
      vmap <Leader>a= :Tabularize /=<CR>
      nmap <Leader>a: :Tabularize /:\zs<CR>
      vmap <Leader>a: :Tabularize /:\zs<CR>
    endif
    inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a

	function! s:align()
  	  let p = '^\s*|\s.*\s|\s*$'
  	  if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    		let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    		let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    		Tabularize/|/l1
    		normal! 0
    		call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  	  endif
	endfunction

filetype plugin indent on


"}

"enable syntax check
syntax on

"自定义map {
let mapleader = ","
"let maplocalleader = "\\"

nnoremap <leader>er :vsp $MYVIMRC<cr>
nnoremap <leader>re :source $MYVIMRC<cr>

map <leader>w :w<CR>
map <leader>x :x<CR>
map <leader>q :q!<CR>
map <leader>tn :tabnew<cr>
map! jk <esc>

"插入模式下移动
inoremap <c-d> <esc>ddi
inoremap <c-k> <up>
inoremap <c-j> <down>
inoremap <c-l> <right>
inoremap <c-h> <left>

"大小写转换
nnoremap <c-u> bgUee
inoremap <c-u> <esc>bgUeea

"使用tab键来代替%进行匹配跳转
nmap <tab> %
vmap <tab> %

"}

"新文件标题 {
autocmd BufNewfile *.sh,*.py,*.php,*.rb,*.pl exec ":call SetTitle()"
function SetTitle()
	if &filetype == 'sh'
		call setline(1,"\#!/bin/bash")
		call append(line("."),"")

	elseif &filetype == 'python'
		call setline(1,"\#!/usr/bin/env python")
		call append(line("."),"# coding=utf-8")
		call append(line(".")+1,"")
	
	elseif &filetype == 'ruby'
		call setline(1,"#!/usr/bin/env ruby")
		call append(line("."),"# encoding: utf-8")
		call append(line(".")+1, "")

	elseif &filetype == 'php'
		call setline(1,"\<?php")
		call append(line("."),"")
		call append(line(".")+1,"\?>")

	elseif &filetype == 'pl'
		call setline(1,"\#!/usr/bin/perl")
		call append(line("."),"")
		call append(line(".")+1,"\?>")

	else
		call setline(1,"")
	
	endif
endfunction

autocmd BufNewfile * normal G "自动定位到新文件末行

"}
		
